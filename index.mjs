// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function u(t,u){return e(u)?s(u,"flags")&&(t.flags=u.flags,!n(t.flags))?new TypeError(i("invalid option. `%s` option must be a string. Option: `%s`.","flags",t.flags)):s(u,"capture")&&(t.capture=u.capture,!r(t.capture))?new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","capture",t.capture)):null:new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",u))}var a="[\t\n\v\f\r              \u2028\u2029  　\ufeff]";function o(t){var e,s;if(arguments.length>0){if(s=u(e={},t))throw s;return e.capture?new RegExp("("+a+")",e.flags):new RegExp(a,e.flags)}return/[\u0009\u000A\u000B\u000C\u000D\u0020\u0085\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]/}var p=o({capture:!0}),l=o();t(o,"REGEXP",l),t(o,"REGEXP_CAPTURE",p);export{l as REGEXP,p as REGEXP_CAPTURE,o as default};
//# sourceMappingURL=index.mjs.map
